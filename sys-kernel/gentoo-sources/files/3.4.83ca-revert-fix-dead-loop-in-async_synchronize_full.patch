--- a/kernel/async.c	2014-06-08 09:44:21.273653644 +0200
+++ b/kernel/async.c	2012-05-21 00:29:13.000000000 +0200
@@ -86,13 +86,6 @@
 {
 	struct async_entry *entry;
 
-	if (!running) { /* just check the entry count */
-		if (atomic_read(&entry_count))
-			return 0; /* smaller than any cookie */
-		else
-			return next_cookie;
-	}
-
 	if (!list_empty(running)) {
 		entry = list_first_entry(running,
 			struct async_entry, list);
@@ -243,7 +236,9 @@
  */
 void async_synchronize_full(void)
 {
-	async_synchronize_cookie_domain(next_cookie, NULL);
+	do {
+		async_synchronize_cookie(next_cookie);
+	} while (!list_empty(&async_running) || !list_empty(&async_pending));
 }
 EXPORT_SYMBOL_GPL(async_synchronize_full);
 
@@ -263,7 +258,7 @@
 /**
  * async_synchronize_cookie_domain - synchronize asynchronous function calls within a certain domain with cookie checkpointing
  * @cookie: async_cookie_t to use as checkpoint
- * @running: running list to synchronize on, NULL indicates all lists
+ * @running: running list to synchronize on
  *
  * This function waits until all asynchronous function calls for the
  * synchronization domain specified by the running list @list submitted
