--- a/drivers/gpu/drm/i915/i915_gem.c	2011-06-02 18:58:37.000000000 +0200
+++ b/drivers/gpu/drm/i915/i915_gem.c	2011-06-02 21:17:39.779439325 +0200
@@ -56,7 +56,9 @@
 static void i915_gem_free_object_tail(struct drm_i915_gem_object *obj);
 
 static int i915_gem_inactive_shrink(struct shrinker *shrinker,
-				    struct shrink_control *sc);
+                                   int nr_to_scan,
+                                   gfp_t gfp_mask);
+
 
 /* some bookkeeping */
 static void i915_gem_info_add_obj(struct drm_i915_private *dev_priv,
@@ -4090,7 +4092,9 @@
 }
 
 static int
-i915_gem_inactive_shrink(struct shrinker *shrinker, struct shrink_control *sc)
+i915_gem_inactive_shrink(struct shrinker *shrinker,
+                        int nr_to_scan,
+                        gfp_t gfp_mask)
 {
 	struct drm_i915_private *dev_priv =
 		container_of(shrinker,
@@ -4098,7 +4102,6 @@
 			     mm.inactive_shrinker);
 	struct drm_device *dev = dev_priv->dev;
 	struct drm_i915_gem_object *obj, *next;
-	int nr_to_scan = sc->nr_to_scan;
 	int cnt;
 
 	if (!mutex_trylock(&dev->struct_mutex))
--- a/drivers/gpu/drm/ttm/ttm_page_alloc.c	2011-06-02 18:58:37.000000000 +0200
+++ b/drivers/gpu/drm/ttm/ttm_page_alloc.c	2011-06-02 21:18:42.962649428 +0200
@@ -395,14 +395,12 @@
 /**
  * Callback for mm to request pool to reduce number of page held.
  */
-static int ttm_pool_mm_shrink(struct shrinker *shrink,
-			      struct shrink_control *sc)
+static int ttm_pool_mm_shrink(struct shrinker *shrink, int shrink_pages, gfp_t gfp_mask)
 {
 	static atomic_t start_pool = ATOMIC_INIT(0);
 	unsigned i;
 	unsigned pool_offset = atomic_add_return(1, &start_pool);
 	struct ttm_page_pool *pool;
-	int shrink_pages = sc->nr_to_scan;
 
 	pool_offset = pool_offset % NUM_POOLS;
 	/* select start pool in round robin fashion */
