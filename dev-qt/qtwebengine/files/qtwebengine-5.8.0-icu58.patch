--- a/src/3rdparty/chromium/components/url_formatter/url_formatter.cc	2016-11-18 01:03:08.622418814 +0100
+++ b/src/3rdparty/chromium/components/url_formatter/url_formatter.cc	2016-11-18 01:03:46.923497823 +0100
@@ -430,8 +430,8 @@ void IDNSpoofChecker::SetAllowedUnicodeS
   // http://www.unicode.org/Public/security/latest/xidmodifications.txt) are
   // are added to the allowed set. The list has to be updated when a new
   // version of Unicode is released. The current version is 8.0.0 and ICU 58
-  // will have Unicode 9.0 data.
-#if U_ICU_VERSION_MAJOR_NUM < 58
+  // will have Unicode 10.0 data.
+#if U_ICU_VERSION_MAJOR_NUM < 60
   const icu::UnicodeSet aspirational_scripts(
       icu::UnicodeString(
           // Unified Canadian Syllabics
@@ -451,7 +451,7 @@ void IDNSpoofChecker::SetAllowedUnicodeS
       *status);
   allowed_set.addAll(aspirational_scripts);
 #else
-#error "Update aspirational_scripts per Unicode 9.0"
+#error "Update aspirational_scripts per Unicode 10.0"
 #endif
 
   // U+0338 is included in the recommended set, while U+05F4 and U+2027 are in
--- a/src/3rdparty/chromium/third_party/WebKit/Source/platform/text/TextBreakIterator.cpp	2016-11-18 01:22:17.564024415 +0100
+++ b/src/3rdparty/chromium/third_party/WebKit/Source/platform/text/TextBreakIterator.cpp	2016-11-18 01:24:47.766387055 +0100
@@ -123,6 +123,11 @@ static const unsigned char asciiLineBrea
     { B(0, 0, 0, 0, 0, 0, 0, 0), B(0, 0, 0, 0, 0, 0, 0, 0), 0, B(0, 0, 0, 0, 0, 0, 0, 0), 0, 0, 0, B(0, 0, 0, 0, 0, 0, 0, 0), 0, 0, 0, B(0, 0, 0, 0, 0, 0, 0, 0) }, // DEL
 };
 
+#if U_ICU_VERSION_MAJOR_NUM >= 58
+#define BA_LB_COUNT (U_LB_COUNT - 3)
+#else
+#define BA_LB_COUNT U_LB_COUNT
+#endif
 // Line breaking table for CSS word-break: break-all. This table differs from
 // asciiLineBreakTable in:
 // - Indices are Line Breaking Classes defined in UAX#14 Unicode Line Breaking
@@ -179,7 +184,7 @@ static const unsigned char breakAllLineB
 #undef AL
 
 static_assert(WTF_ARRAY_LENGTH(asciiLineBreakTable) == asciiLineBreakTableLastChar - asciiLineBreakTableFirstChar + 1, "asciiLineBreakTable should be consistent");
-static_assert(WTF_ARRAY_LENGTH(breakAllLineBreakClassTable) == U_LB_COUNT, "breakAllLineBreakClassTable should be consistent");
+static_assert(WTF_ARRAY_LENGTH(breakAllLineBreakClassTable) == BA_LB_COUNT, "breakAllLineBreakClassTable should be consistent");
 
 static inline bool shouldBreakAfter(UChar lastCh, UChar ch, UChar nextCh)
 {
