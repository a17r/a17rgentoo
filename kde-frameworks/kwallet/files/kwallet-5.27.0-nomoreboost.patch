diff --git a/src/runtime/kwalletd/backend/backendpersisthandler.cpp b/src/runtime/kwalletd/backend/backendpersisthandler.cpp
index 413d4cd..0058f13 100644
--- a/src/runtime/kwalletd/backend/backendpersisthandler.cpp
+++ b/src/runtime/kwalletd/backend/backendpersisthandler.cpp
@@ -26,7 +26,6 @@
 #include <KMessageBox>
 #include <klocalizedstring.h>
 #ifdef HAVE_QGPGME
-#include <boost/shared_ptr.hpp>
 #include <gpgme.h>
 #include <gpgme++/context.h>
 #include <gpgme++/key.h>
@@ -55,14 +54,6 @@
 #define KWALLET_HASH_MD5        1 // unsupported
 #define KWALLET_HASH_PBKDF2_SHA512 2 // used when using kwallet with pam or since 4.13 version
 
-// this defines the required throw_exception function in the namespace boost
-namespace boost {
-  void throw_exception(std::exception const &e) {
-     qDebug() << "boost::throw_exception called: " << e.what();
-     // FIXME: how to notify the user in this case?
-  }
-}
-
 namespace KWallet
 {
 
@@ -515,7 +506,7 @@ int GpgPersistHandler::write(Backend *wb, QSaveFile &sf, QByteArray &version, WI
         return -5;
     }
 
-    boost::shared_ptr< GpgME::Context > ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
+    std::shared_ptr< GpgME::Context > ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
     if (0 == ctx) {
         qDebug() << "Cannot setup OpenPGP context!";
         KMessageBox::errorWId(w, i18n("<qt>Error when attempting to initialize OpenPGP while attempting to save the wallet <b>%1</b>. Please fix your system configuration, then try again.</qt>"), wb->_name.toHtmlEscaped());
@@ -615,7 +606,7 @@ int GpgPersistHandler::read(Backend *wb, QFile &sf, WId w)
     }
 
 retry_label:
-    boost::shared_ptr< GpgME::Context > ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
+    std::shared_ptr< GpgME::Context > ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
     if (0 == ctx) {
         KMessageBox::errorWId(w, i18n("<qt>Error when attempting to initialize OpenPGP while attempting to open the wallet <b>%1</b>. Please fix your system configuration, then try again.</qt>", wb->_name.toHtmlEscaped()));
         qDebug() << "Cannot setup OpenPGP context!";
diff --git a/src/runtime/kwalletd/knewwalletdialog.cpp b/src/runtime/kwalletd/knewwalletdialog.cpp
index 0d9ffb8..7383b13 100644
--- a/src/runtime/kwalletd/knewwalletdialog.cpp
+++ b/src/runtime/kwalletd/knewwalletdialog.cpp
@@ -130,7 +130,7 @@ void KNewWalletDialogGpg::initializePage()
         emit completeChanged();
         return;
     }
-    boost::shared_ptr< GpgME::Context >   _ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
+    std::shared_ptr< GpgME::Context >   _ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
     if (0 == _ctx) {
         KMessageBox::error(this, i18n("The QGpgME library failed to initialize for the OpenPGP protocol. Please check your system's configuration then try again."));
         emit completeChanged();
diff --git a/src/runtime/kwalletd/knewwalletdialog.h b/src/runtime/kwalletd/knewwalletdialog.h
index ea71fbc..40470d8 100644
--- a/src/runtime/kwalletd/knewwalletdialog.h
+++ b/src/runtime/kwalletd/knewwalletdialog.h
@@ -23,7 +23,6 @@
 
 #include "ui_knewwalletdialogintro.h"
 #include "ui_knewwalletdialoggpg.h"
-#include <boost/shared_ptr.hpp>
 
 namespace GpgME
 {
diff --git a/src/runtime/kwalletd/kwalletd.cpp b/src/runtime/kwalletd/kwalletd.cpp
index ca7d4ff..1f5da6f 100644
--- a/src/runtime/kwalletd/kwalletd.cpp
+++ b/src/runtime/kwalletd/kwalletd.cpp
@@ -63,15 +63,6 @@
 
 #include "kwalletadaptor.h"
 
-// this defines the required throw_exception function in the namespace boost
-namespace boost {
-void throw_exception(std::exception const& e)
-{
-    qDebug() << "boost::throw_exception called: " << e.what();
-    // FIXME: how to notify the user in this case?
-}
-}
-
 class KWalletTransaction {
 
 public:
@@ -706,7 +697,7 @@ int KWalletD::internalOpen(const QString& appid, const QString& wallet,
             KWallet::BackendCipherType newWalletType
                 = KWallet::BACKEND_CIPHER_UNKNOWN;
 
-            boost::shared_ptr<KWallet::KNewWalletDialog> newWalletDlg(
+            std::shared_ptr<KWallet::KNewWalletDialog> newWalletDlg(
                 new KWallet::KNewWalletDialog(
                     appid, wallet, QWidget::find(w)));
             GpgME::Key gpgKey;
diff --git a/src/runtime/kwalletd/kwalletwizard.cpp b/src/runtime/kwalletd/kwalletwizard.cpp
index cd52e54..0bdd582 100644
--- a/src/runtime/kwalletd/kwalletwizard.cpp
+++ b/src/runtime/kwalletd/kwalletwizard.cpp
@@ -39,7 +39,6 @@
 #include <QDebug>
 #include <kmessagebox.h>
 #include <gpgme.h>
-#include <boost/shared_ptr.hpp>
 #endif
 
 class PageIntro : public QWizardPage
@@ -162,7 +161,7 @@ public:
             qDebug() << "OpenPGP not supported on your system!";
             KMessageBox::error(this, i18n("The QGpgME library failed to initialize for the OpenPGP protocol. Please check your system's configuration then try again."));
         } else {
-            boost::shared_ptr< GpgME::Context > ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
+            std::shared_ptr< GpgME::Context > ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
             if (0 == ctx) {
                 KMessageBox::error(this, i18n("The QGpgME library failed to initialize for the OpenPGP protocol. Please check your system's configuration then try again."));
             } else {
