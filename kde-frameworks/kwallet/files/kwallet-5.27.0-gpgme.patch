diff --git a/src/runtime/kwalletd/CMakeLists.txt b/src/runtime/kwalletd/CMakeLists.txt
index d7e9ca2..5092a7e 100644
--- a/src/runtime/kwalletd/CMakeLists.txt
+++ b/src/runtime/kwalletd/CMakeLists.txt
@@ -13,16 +13,22 @@ find_package(KF5WidgetsAddons ${KF5_DEP_VERSION} REQUIRED)
 find_package(KF5WindowSystem ${KF5_DEP_VERSION} REQUIRED)
 
 ########### find needed packages ######
-find_package(Gpgme)  # Called by KF5Gpgmepp, but since we call some gpgme
-                     # functions ourselves we need to link against it directly.
-find_package(KF5Gpgmepp) # provided by kdepimlibs
+find_package(Gpgmepp) # provided by GpgME
+set(GPGMEPP_LIBS Gpgmepp)
 
-if (KF5Gpgmepp_FOUND)
+if (NOT Gpgmepp_FOUND)
+    find_package(Gpgme)  # Called by KF5Gpgmepp, but since we call some gpgme
+                         # functions ourselves we need to link against it directly.
+    find_package(KF5Gpgmepp) # provided by KF5Gpgmepp
+    set(GPGMEPP_LIBS KF5::Gpgmepp)
+endif(NOT Gpgmepp_FOUND)
+
+if (Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
     message("GPG support enabled")
     add_definitions(-DHAVE_QGPGME)
     add_definitions(-DBOOST_NO_EXCEPTIONS)
     include_directories(${GPGME_INCLUDES})
-endif(KF5Gpgmepp_FOUND)
+endif(Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
 
 
 ########### build backends #########
@@ -67,7 +73,7 @@ ki18n_wrap_ui(kwalletd_SRCS
    migrationwizard2.ui
 )
 
-if (KF5Gpgmepp_FOUND)
+if (Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
     set(kwalletd_SRCS
         ${kwalletd_SRCS}
         knewwalletdialog.cpp
@@ -78,7 +84,7 @@ if (KF5Gpgmepp_FOUND)
         knewwalletdialogintro.ui
         knewwalletdialoggpg.ui
     )
-endif(KF5Gpgmepp_FOUND)
+endif(Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
 
 find_file(kwallet_xml org.kde.KWallet.xml HINTS ${CMAKE_CURRENT_SOURCE_DIR}/../../api/KWallet)
 
@@ -112,10 +118,10 @@ target_link_libraries(kwalletd5
     KF5::WidgetsAddons
     KF5::WindowSystem
     KF5::Notifications)
-if (KF5Gpgmepp_FOUND)
-    target_link_libraries(kwalletd5 KF5::Gpgmepp )
+if (Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
+    target_link_libraries(kwalletd5 ${GPGMEPP_LIBS})
     kde_target_enable_exceptions(kwalletd5 PRIVATE)
-endif(KF5Gpgmepp_FOUND)
+endif(Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
 
 install(TARGETS kwalletd5  ${KF5_INSTALL_TARGETS_DEFAULT_ARGS})
 
diff --git a/src/runtime/kwalletd/backend/CMakeLists.txt b/src/runtime/kwalletd/backend/CMakeLists.txt
index 20bd4d9..2f99bc3 100644
--- a/src/runtime/kwalletd/backend/CMakeLists.txt
+++ b/src/runtime/kwalletd/backend/CMakeLists.txt
@@ -5,10 +5,10 @@ include(GenerateExportHeader)
 
 check_include_files(stdint.h HAVE_STDINT_H)
 check_include_files(sys/bitypes.h HAVE_SYS_BITYPES_H)
-if (KF5Gpgmepp_FOUND)
+if (Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
     add_definitions(-DHAVE_QGPGME)
     add_definitions(-DBOOST_NO_EXCEPTIONS)
-endif(KF5Gpgmepp_FOUND)
+endif(Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
 
 configure_file (config-kwalletbackend.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-kwalletbackend.h )
 
@@ -48,9 +48,9 @@ generate_export_header(kwalletbackend5)
 ecm_setup_version(${KF5_VERSION} VARIABLE_PREFIX KWALLETBACKEND SOVERSION 5)
 
 target_link_libraries(kwalletbackend5 Qt5::Widgets KF5::WidgetsAddons KF5::CoreAddons KF5::Notifications KF5::I18n ${LIBGCRYPT_LIBRARIES})
-if(KF5Gpgmepp_FOUND)
-target_link_libraries(kwalletbackend5 KF5::Gpgmepp)
-endif(KF5Gpgmepp_FOUND)
+if(Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
+   target_link_libraries(kwalletbackend5 ${GPGMEPP_LIBS})
+endif(Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
 
 # link with advapi32 on windows
 if(WIN32 AND NOT WINCE)
diff --git a/tests/kwalletd/CMakeLists.txt b/tests/kwalletd/CMakeLists.txt
index c84c1db..1e7c4b7 100644
--- a/tests/kwalletd/CMakeLists.txt
+++ b/tests/kwalletd/CMakeLists.txt
@@ -11,7 +11,13 @@ find_package(KF5CoreAddons ${KF5_DEP_VERSION} REQUIRED)
 find_package(KF5I18n ${KF5_DEP_VERSION} REQUIRED)
 find_package(KF5IconThemes ${KF5_DEP_VERSION} REQUIRED)
 find_package(KF5WidgetsAddons ${KF5_DEP_VERSION} REQUIRED)
-find_package(KF5Gpgmepp) # provided by kdepimlibs
+find_package(Gpgmepp) # provided by GpgME
+set(GPGMEPP_LIBS Gpgmepp)
+
+if (NOT Gpgmepp_FOUND)
+    find_package(KF5Gpgmepp) # provided by KF5Gpgmepp
+    set(GPGMEPP_LIBS KF5::Gpgmepp)
+endif(NOT Gpgmepp_FOUND)
 
 remove_definitions(-DQT_NO_CAST_FROM_ASCII)
 remove_definitions(-DQT_NO_CAST_FROM_BYTEARRAY)
@@ -29,10 +35,10 @@ qt5_wrap_ui(kwalletwizardtest_SRCS
    ../../src/runtime/kwalletd/kwalletwizardpagegpgkey.ui
 )
 
-if (KF5Gpgmepp_FOUND)
+if (Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
     qt5_wrap_ui(kwalletwizardtest_SRCS
         ../../src/runtime/kwalletd/kwalletwizardpagepasswordgpg.ui)
-endif(KF5Gpgmepp_FOUND)
+endif(Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
 
 add_executable(kwalletwizardtest ${kwalletwizardtest_SRCS})
 ecm_mark_as_test(kwalletwizardtest)
@@ -43,9 +49,9 @@ target_link_libraries(kwalletwizardtest
     KF5::I18n
     KF5::IconThemes
     KF5::WidgetsAddons)
-if (KF5Gpgmepp_FOUND)
-    target_link_libraries(kwalletwizardtest KF5::Gpgmepp)
-endif(KF5Gpgmepp_FOUND)
+if (Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
+    target_link_libraries(kwalletwizardtest ${GPGMEPP_LIBS})
+endif(Gpgmepp_FOUND OR KF5Gpgmepp_FOUND)
 
 set(kwallettestlib_SRCS kwallettest.cpp)
 add_library(kwallettestlib STATIC ${kwallettestlib_SRCS})
