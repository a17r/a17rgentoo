From cebdbaf56d1eed9547eecec355481e0f822ef83f Mon Sep 17 00:00:00 2001
From: Christoph Feck <cfeck@kde.org>
Date: Sat, 3 Jun 2017 01:39:52 +0200
Subject: KViewStateSerializer: Fix crash when view is destroyed before state
 serializer

KViewStateSerializer::restoreScrollBarState() calls QScrollBar::maximum()
on an invalid (i.e. already deleted) scrollbar. This means, the enclosing
QAbstractScrollArea has been deleted between the call to ::restoreScrollState()
and the deferred (via a single shot timer) ::restoreScrollBarState().

This commit works around the issue by allowing users to delete the view
immediately after ::restoreScrollState() was called.

BUG: 353380
FIXED-IN: 5.35.0

Reviewers: #frameworks, skelly

Reviewed By: skelly

Subscribers: mlaurent

Differential Revision: https://phabricator.kde.org/D5821
---
 src/kviewstateserializer.cpp | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/kviewstateserializer.cpp b/src/kviewstateserializer.cpp
index b5b60f4..6e5df02 100644
--- a/src/kviewstateserializer.cpp
+++ b/src/kviewstateserializer.cpp
@@ -22,6 +22,7 @@
 #include "kviewstateserializer.h"
 
 #include <QAbstractScrollArea>
+#include <QPointer>
 #include <QScrollBar>
 #include <QTimer>
 #include <QTreeView>
@@ -51,6 +52,9 @@ public:
 
     inline void restoreScrollBarState()
     {
+        if (!m_scrollArea) {
+            return;
+        }
         if (m_horizontalScrollBarValue >= 0 && m_horizontalScrollBarValue <= m_scrollArea->horizontalScrollBar()->maximum()) {
             m_scrollArea->horizontalScrollBar()->setValue(m_horizontalScrollBarValue);
             m_horizontalScrollBarValue = -1;
@@ -95,7 +99,7 @@ public:
     QTreeView *m_treeView;
     QAbstractItemView *m_view;
     QItemSelectionModel *m_selectionModel;
-    QAbstractScrollArea *m_scrollArea;
+    QPointer<QAbstractScrollArea> m_scrollArea;
 
     int m_horizontalScrollBarValue;
     int m_verticalScrollBarValue;
-- 
cgit v0.11.2
